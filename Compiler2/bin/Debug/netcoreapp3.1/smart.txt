//    \file smart.txt
//    Copyright Notice\n
//    Copyright (C) 1995-2020 Richard Croxall - developer and architect\n
//    Copyright (C) 1995-2020 Dr Sylvia Croxall - code reviewer and tester\n
//
//    This file is part of Compiler2.
//
//    Compiler2 is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Compiler2 is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Compiler2.  If not, see <https://www.gnu.org/licenses/>.
//
RULES smartHouse

ROOM Conservatory, Lounge, DiningRoom, Kitchen, Hall, UtilityRoom, Landing, Bed1, Garage, Smart;

HOUSECODE Downstairs B OFFPROCEDURE AllOffB ONPROCEDURE SomebodyIn;
HOUSECODE Upstairs C OFFPROCEDURE AllOffC ONPROCEDURE SomebodyIn;
HOUSECODE GoogleHomeAlexa G;
HOUSECODE Infrared I;
HOUSECODE AutoLights L;
HOUSECODE PIRS P;

//Housecode B - Downstairs
DEVICE APPLIANCELAMP Lounge.WallLights B 1 OFFPROCEDURE OffLoungeLEDLights;
DEVICE APPLIANCELAMP Lounge.CeilingLights B 2;
DEVICE APPLIANCELAMP Lounge.LEDLights B 3; //Dining Room LEDs are on the same code.
DEVICE APPLIANCELAMP DiningRoom.CeilingLight B 4;
DEVICE APPLIANCELAMP Lounge.Moodlights B 6;
DEVICE APPLIANCELAMP UtilityRoom.Lights B 7;
DEVICE APPLIANCELAMP Conservatory.FloorLights B 9;
DEVICE APPLIANCELAMP Conservatory.HighWallLights B 10;
DEVICE APPLIANCELAMP Conservatory.LowWallLights B 11;

DEVICE APPLIANCE Lounge.SatelliteReceiver B 12 ONPROCEDURE TvOn;
DEVICE APPLIANCE Kitchen.Amplifier B 13 ;
DEVICE APPLIANCE Lounge.Amplifier  B 14 ONPROCEDURE DownstairsHifiOn;
DEVICE APPLIANCE Lounge.Tv    B 15 OFFPROCEDURE TvOff ONPROCEDURE TvOn;
DEVICE APPLIANCE Kitchen.Tv B 16 ONPROCEDURE TvOn;

//Housecode C - Upstairs
DEVICE APPLIANCELAMP Bed1.CeilingLight    C 1;
DEVICE LAMP          Bed1.RichardsLight C 2;
DEVICE LAMP          Bed1.SylviasLight  C 3;
DEVICE APPLIANCELAMP Bed1.ComputerLight C 4;
DEVICE APPLIANCELAMP Bed1.TripleSpotlight C 5;
DEVICE APPLIANCE     Bed1.Amplifier C 13;
DEVICE APPLIANCE     Bed1.Tv C 15 ONPROCEDURE TvInBed;
//temporary
DEVICE APPLIANCE     Bed1.Dummy C 16 OFFPROCEDURE philipsOff ONPROCEDURE philipsOn;

//Housecode G - Google Home/Alexa Dot smarthome transceivers
DEVICE APPLIANCE Smart.GoogleAlexa G 1;
DEVICE APPLIANCE Smart.Dog G 2;

//Housecode I - Infrared sender
//The sender stores 32 infra-red remote control messages; 2 for each device code - one of "ON" and one for "Off".
//For exmple sending "ON" to I2 is equivalent to pressing "2" on the Fsat remote control
//for example sending "OFF" to I2 is eqivalent to pressing Zone 1 to CD on the Yamaha Amplifier remote control.
DEVICE REMOTE Lounge.Fsat1AmpZone1Fsat I 1;
DEVICE REMOTE Lounge.Fsat2AmpZone1Bluray I 2;
DEVICE REMOTE Lounge.Fsat3AmpZone1Cctv I 3;
DEVICE REMOTE Lounge.Fsat4AmpZone1Vhs I 4;
DEVICE REMOTE Lounge.Fsat5AmpZone1Satellite I 5;
DEVICE REMOTE Lounge.Fsat6AmpZone2Fsat I 6;
DEVICE REMOTE Lounge.Fsat7AmpZone2Bluray I 7;
DEVICE REMOTE Lounge.Fsat8AmpZone2Cctv I 8;
DEVICE REMOTE Lounge.Fsat9AmpZone2Vhs I 9;
DEVICE REMOTE Lounge.Fsat0AmpZone2Satellite I 10;
DEVICE REMOTE Lounge.FsatReceiverNothing I 11;
DEVICE REMOTE Lounge.TechnomateAmpZone1Cd I 12;
DEVICE REMOTE Lounge.CDJukeBoxAmpZone2Cd I 13;
DEVICE REMOTE Lounge.CDRandomNothing I 14;
DEVICE REMOTE Lounge.NothingAmpZone1Tuner I 15;
DEVICE REMOTE Lounge.NothingAmpZone2Tuner I 16;

//Housecode L - Lamps
DEVICE LAMP  Hall.PIRLight L 1;
DEVICE LAMP  Landing.PIRLight L 2;
DEVICE APPLIANCELAMP  Kitchen.PIRLight L 3;
DEVICE APPLIANCELAMP  Garage.OutsideLight L 4;
//DEVICE APPLIANCELAMP  Garage.XmasLights L 6;

//Housecode P Passive Infra Red/Darkness sensors
DEVICE SENSOR Conservatory.PIR P 1 ONPROCEDURE SomebodyInConservatory;
DEVICE SENSOR Conservatory.PIRDark P 2 ONPROCEDURE GoingDark;
DEVICE SENSOR Lounge.PIR P 3 ONPROCEDURE SomebodyInLounge;
DEVICE SENSOR Lounge.PIRDark P 4 ONPROCEDURE GoingDark;
DEVICE SENSOR DiningRoom.PIR P 5  ONPROCEDURE SomebodyInDiningRoom;
DEVICE SENSOR DiningRoom.PIRDark P 6 ONPROCEDURE GoingDark;
DEVICE SENSOR Hall.PIR P 7 ONPROCEDURE SomebodyInHall;
DEVICE SENSOR Hall.PIRDark P 8 ONPROCEDURE GoingDark;
DEVICE SENSOR Landing.PIR P 9 ONPROCEDURE SomebodyInLanding;
DEVICE SENSOR Landing.PIRDark P 10 ONPROCEDURE GoingDark;
DEVICE SENSOR Bed1.PIR P 11  ONPROCEDURE SomebodyInBedroom1;
DEVICE SENSOR Bed1.PIRDark P 12 ONPROCEDURE GoingDark;
DEVICE SENSOR Kitchen.PIR P 13  ONPROCEDURE SomebodyInKitchen;
DEVICE SENSOR Kitchen.PIRDark P 14 ONPROCEDURE GoingDark;
DEVICE SENSOR UtilityRoom.PIR P 15  ONPROCEDURE SomebodyInUtilityRoom;
DEVICE SENSOR UtilityRoom.PIRDark P 16 ONPROCEDURE GoingDark;

DEVICE HUELAMP Lounge.MoodLight1 B "00:17:88:01:03:12:12:36-0b";
DEVICE HUELAMP Lounge.MoodLight2 B "00:17:88:01:03:10:14:ad-0b";
DEVICE HUELAMP Lounge.MoodLight3 B "00:17:88:01:03:10:14:79-0b";
DEVICE HUELAMP Lounge.MoodLight4 B "00:17:88:01:03:10:79:2c-0b";
DEVICE HUELAMP Lounge.MoodLight5 B "00:17:88:01:03:10:7d:cc-0b";
DEVICE HUELAMP Lounge.MoodLight6 B "00:17:88:01:03:10:5d:51-0b";

//Timers
TIMEOUT ConservatoryEmptyTimeout 00:10:00 OFFPROCEDURE NoOneInConservatory;
TIMEOUT LoungeEmptyTimeout 00:30:00 OFFPROCEDURE NoOneInLounge;
TIMEOUT DiningRoomEmptyTimeout 00:20:00 OFFPROCEDURE NoOneInDiningRoom;
TIMEOUT KitchenEmptyTimeout 00:30:00 OFFPROCEDURE NoOneInKitchen;
TIMEOUT Bedroom1EmptyTimeout 00:30:00 OFFPROCEDURE NoOneinBedroom1;
TIMEOUT HouseEmptyTimeout 02:00:00 OFFPROCEDURE NoOneinHouse;
TIMEOUT loungeAmplifierWarmUpTimeout 00:00:20 OFFPROCEDURE DownstairsSetAmplifierToShowFsat;
TIMEOUT loungeAmplifierWarmUpRadioTimeout 00:00:20 OFFPROCEDURE DownstairsSetAmplifierToListenToRadio;


// Darkness = Dark from Sunset to Sunrise, 
// Darkness = Light from Sunrise to 1 hours before Sunset, 
// Darkness = Nearly dark from 1 hour before sunset.
//If a PIR declares it is dark in the hour before sunset, darkness is set to Dark.
ENUM DarknessEnum (Light, NearlyDark, Dark);
INT darkness = Dark;

BOOL someoneIsInTheHouse = FALSE;
BOOL FsatReceiverIsOn = FALSE;
BOOL SomeoneIsInKitchen = FALSE;
BOOL SomeoneIsInLounge = FALSE;
BOOL SomeoneIsInDiningRoom = FALSE;
BOOL ListeningToEveningNews = FALSE;

// whatTime = Daytime from 09:00 on working days or 10:00 on non-working days all day
// whatTime = BedTime from about 11 hours before our wakeup alarm to 7 hours before wakeup alarm
// whatTime = SleepTime from 7 hours before wakeup alarm or if "all units off" on house code C is pressed during BedTime.
// whatTime = EarliestWakeUpTime 2 hours before waking up time, the tv is allowed on downstairs.
// whatTime = GettingUpTime from 08:00 on working days or 09:00 on non-working days for an hour
ENUM TimeEnum (DayTime, BedTime, SleepTime, EarliestWakeUpTime, GettingUpTime);
INT whatTime = DayTime;


// ******************* Temporary ****************************
PROCEDURE philipsOff
		SETDEVICE Lounge.MoodLight1 OFF; 
		SETDEVICE Lounge.MoodLight2 OFF;
		SETDEVICE Lounge.MoodLight3 OFF;
		SETDEVICE Lounge.MoodLight4 OFF;
		SETDEVICE Lounge.MoodLight5 OFF;
		SETDEVICE Lounge.MoodLight6 OFF;
END;

PROCEDURE philipsOn
		SETDEVICE Lounge.MoodLight1 ON Red; 
		SETDEVICE Lounge.MoodLight2 ON Green;
		SETDEVICE Lounge.MoodLight3 ON Blue;
		SETDEVICE Lounge.MoodLight4 DIM12 Red  COLOURLOOP;
		SETDEVICE Lounge.MoodLight5 DIM12 Green COLOURLOOP;
		SETDEVICE Lounge.MoodLight6 DIM12 Blue COLOURLOOP;
END;

// ******************* TvOn ****************************
PROCEDURE TvOn
    CALL DownstairsTvOn;
    CALL TvLights;
END;
// ******************* TvOff ****************************
PROCEDURE TvOff
    CALL DownstairsTvOff;
    CALL TvLightsOff;
END;
// ******************* AllOffB  ****************************
PROCEDURE AllOffB // what happens when the B house code (downstairs) all off button is pressed
	CALL SetFsatReceiverToStandby;
    IF whatTime == EarliestWakeUpTime OR whatTime == GettingUpTime OR whatTime == DayTime THEN
		CALL AllGoOut;
	ELSE
		CALL AllOffDownstairs;
	ENDIF;
	SETDEVICE Kitchen.PIRLight OFF;
END;

// ******************* AllOffC  ****************************
PROCEDURE AllOffC // what happens when the C house code (upstairs) all off button is pressed
    IF whatTime == GettingUpTime OR whatTime == DayTime THEN
		CALL AllGoOut;
	ELSE
		CALL AllOff;
		CALL AllInBed;
		whatTime = SleepTime;
    ENDIF;
END;

// ******************* Activate Google Home, Alexa Dot devices and other home automation devices ****************************
PROCEDURE ActivateGoogleAlexa
	IF someoneIsInTheHouse AND 
           whatTime != SleepTime AND whatTime != BedTime THEN //don't switch on in the middle of the night, if someone goes downstairs
		SETDEVICE Smart.GoogleAlexa ON DURATION 04:00:00;
	ENDIF;
END;

// ******************* Deactivate Google Home, Alexa Dot devices and other home automation devices ****************************
PROCEDURE DeactivateGoogleAlexa
	SETDEVICE Smart.GoogleAlexa OFF DELAYED 00:10:00;
END;


// ******************* Somebody In ****************************
PROCEDURE SomebodyIn
	CALL SecurityStop;
	someoneIsInTheHouse = TRUE;
	IF whatTime == BedTime OR whatTime == SleepTime THEN
		RESET HouseEmptyTimeout DURATION 08:00:00; //Sleeping people do not move much.
	ELSE
		RESET HouseEmptyTimeout;
	ENDIF;
	IF ListeningToEveningNews THEN
		CALL EveningNews;
	ENDIF;
END;

// ******************* SomebodyInConservatory  ****************************
PROCEDURE SomebodyInConservatory
    RESET ConservatoryEmptyTimeout;
	CALL SomebodyIn;
	IF darkness == Dark THEN
		SETDEVICE Conservatory.HighWallLights ON DURATION 00:02:00;
	ENDIF;
END;

// ******************* SomebodyInLounge  ****************************
PROCEDURE SomebodyInLounge
	CALL SomebodyIn;
	CALL ActivateGoogleAlexa;
	IF NOT SomeoneIsInLounge THEN
	    CALL TvLights;
	ENDIF;
	SomeoneIsInLounge = TRUE;
	IF Lounge.Tv == ON THEN
		RESET LoungeEmptyTimeout DURATION 01:30:00;
	ELSE
		RESET LoungeEmptyTimeout;
	ENDIF;
	CALL WakeUpDownstairsCheck;
	IF darkness == Dark AND Lounge.Tv == OFF THEN
		SETDEVICE Lounge.WallLights ON DURATION 00:20:00;
	ENDIF;
END;

// ******************* SomebodyInDiningRoom  ****************************
PROCEDURE SomebodyInDiningRoom
	CALL SomebodyIn;
	SomeoneIsInDiningRoom = TRUE;
	CALL ActivateGoogleAlexa;
    RESET DiningRoomEmptyTimeout;
	CALL WakeUpDownstairsCheck;
	IF darkness == Dark AND Lounge.Tv == OFF THEN
		SETDEVICE DiningRoom.CeilingLight ON DURATION 00:20:00;
	ENDIF;

	// don't make games players lose their music if the amplifier is on, but the TV is off.
	IF whatTime != SleepTime AND //but don't switch on in the middle of the night
	   Lounge.Amplifier  == ON AND
	   Lounge.Tv == OFF THEN
			SETDEVICE Kitchen.Amplifier ON DURATION 00:30:00;
	ENDIF;
END;
// ******************* Hall Room Lights ****************************
PROCEDURE SomebodyInHall
    //People in hall may be leaving house after pressing all off, so do NOT take as someone in.
	IF darkness == Dark THEN
		SETDEVICE Hall.PIRLight ON DURATION 00:05:00; //stop bulb prematurely failing by constantly switching off and on.
	ENDIF;
END;

// ******************* Landing Lights ****************************
PROCEDURE SomebodyInLanding
	CALL SomebodyIn;
	IF darkness == Dark THEN
		IF whatTime == SleepTime THEN
			SETDEVICE Landing.PIRLight ON DURATION 00:02:00; //Don't disturb sleepers in bedroom 3 too much.
		ELSE
			SETDEVICE Landing.PIRLight ON DURATION 00:05:00; //stop bulb prematurely failing by constantly switching off and on.
		ENDIF;
	ENDIF;
END;

// ******************* SomebodyInBedroom1  ****************************
PROCEDURE SomebodyInBedroom1
	RESET Bedroom1EmptyTimeout;
	CALL SomebodyIn;
	IF darkness == Dark AND 
	(whatTime == GettingUpTime OR 
	 whatTime == DayTime OR 
	 whatTime == BedTime) THEN
		SETDEVICE Bed1.CeilingLight ON DURATION 00:20:00;
	ENDIF;
END;

// ******************* SomebodyInKitchen  ****************************
PROCEDURE SomebodyInKitchen
	SomeoneIsInKitchen= TRUE;
	RESET KitchenEmptyTimeout;
	CALL SomebodyIn;
	CALL ActivateGoogleAlexa;
	CALL WakeUpDownstairsCheck;
	IF darkness == Dark THEN
		SETDEVICE Kitchen.PIRLight ON DURATION 00:10:00;
	ENDIF;
	IF whatTime != SleepTime THEN //don't switch on in the middle of the night
	    IF Lounge.Amplifier == ON THEN
			SETDEVICE Kitchen.Amplifier ON DURATION 00:20:00;
		ENDIF;
	    IF Lounge.Tv == ON THEN
			SETDEVICE Kitchen.Tv ON DURATION 01:30:00; //allow a bit longer to avoid a blank picture in the lounge whilst the HDMI links reset.
		ENDIF;
	ENDIF;
END;

// ******************* Utility RoomLights ****************************
PROCEDURE SomebodyInUtilityRoom
	CALL SomebodyIn;
	IF darkness == Dark THEN
		SETDEVICE UtilityRoom.Lights ON DURATION 00:03:00;
	ENDIF;
END;


// ******************* Upstairs Entertainment ****************************
PROCEDURE TvInBed
	//fsat receiver can only be seen by the upstairs TV if the downstairs amplifier is on, so remove this action for the time being
    //IF NOT FsatReceiverIsOn THEN
	    //SETDEVICE Lounge.FsatReceiverNothing ON;
		//FsatReceiverIsOn = TRUE;
    //ENDIF;
END;

// ******************* DownstairsHifiOn  ****************************
PROCEDURE DownstairsHifiOn
	IF whatTime != SleepTime THEN //don't wake up anybody above kitchen.
		SETDEVICE Kitchen.Amplifier ON;
	ELSE
		SETDEVICE Kitchen.Amplifier OFF;
    ENDIF;
	
	SETDEVICE Lounge.Amplifier ON;
    SETDEVICE Lounge.Tv OFF;
    SETDEVICE Kitchen.Tv OFF;
END;


// ******************* Tv Lights  ****************************
PROCEDURE TvLights
    IF Lounge.Tv == ON AND darkness == Dark THEN
		SETDEVICE DiningRoom.CeilingLight OFF;
		SETDEVICE Lounge.WallLights OFF;
		SETDEVICE Lounge.CeilingLights OFF;
		SETDEVICE Lounge.LEDLights ON;

		SETDEVICE Lounge.MoodLight1 DIM12 Aquamarine COLOURLOOP; 
		SETDEVICE Lounge.MoodLight2 DIM12 Darkorange COLOURLOOP;
		SETDEVICE Lounge.MoodLight3 DIM12 MidnightBlue  COLOURLOOP;
		SETDEVICE Lounge.MoodLight4 DIM12 Plum  COLOURLOOP;
		SETDEVICE Lounge.MoodLight5 DIM12 PaleGreen COLOURLOOP;
		SETDEVICE Lounge.MoodLight6 DIM12 Teal COLOURLOOP;
    ENDIF;
END;

// ******************* Tv Lights Off ****************************
PROCEDURE TvLightsOff
	SETDEVICE Lounge.LEDLights OFF;
	SETDEVICE DiningRoom.LAMP OFF;
	SETDEVICE Lounge.LAMP OFF;

	SETDEVICE Lounge.MoodLight1 OFF; 
	SETDEVICE Lounge.MoodLight2 OFF;
	SETDEVICE Lounge.MoodLight3 OFF;
	SETDEVICE Lounge.MoodLight4 OFF;
	SETDEVICE Lounge.MoodLight5 OFF;
	SETDEVICE Lounge.MoodLight6 OFF;

	IF darkness == Dark AND SomeoneIsInLounge THEN
		SETDEVICE Lounge.WallLights ON DURATION 00:20:00;
	ENDIF;

	IF darkness == Dark AND SomeoneIsInDiningRoom THEN
		SETDEVICE DiningRoom.CeilingLight ON DURATION 00:20:00;
	ENDIF;
END;

// ******************** OffLoungeLEDLights **********************
PROCEDURE OffLoungeLEDLights
	SETDEVICE Lounge.LEDLights OFF;
END;

// ******************* Downstairs Entertainment ****************************
PROCEDURE WakeUpDownstairsCheck
	IF whatTime == EarliestWakeUpTime OR whatTime == GettingUpTime THEN
		CALL DownstairsTvOn;
	ENDIF;
END;


// ******************* Conservatory Lights ****************************
PROCEDURE NoOneInConservatory
	SETDEVICE Conservatory.LAMP OFF;
END;

// ******************* Lounge Lights ****************************
PROCEDURE NoOneInLounge
SomeoneIsInLounge = FALSE;
    SETDEVICE Lounge.LAMP OFF;
END;

// ******************* Dining Room Lights ****************************
PROCEDURE NoOneInDiningRoom
	SomeoneIsInDiningRoom = FALSE;
	IF OFF ==  Lounge.Tv THEN
	    SETDEVICE DiningRoom.LAMP OFF;
	ENDIF;
END;

// ******************* Kitchen Lights, TV and Amplifier ****************************
PROCEDURE NoOneInKitchen
	SomeoneIsInKitchen= FALSE;
	SETDEVICE Kitchen.LAMP OFF;
END;


// ******************* Bedroom 1 Lights ****************************
PROCEDURE NoOneinBedroom1
    SETDEVICE Bed1.LAMP OFF;
END;

// ******************** No-one seen for a while: in bed or gone out ***********
PROCEDURE NoOneinHouse
	CALL AllGoOut;
END;

// ******************* DownstairsSetAmplifierToShowFsat  ****************************
// n.b. amplifier must have spent 20 seconds booting up for this to work
PROCEDURE DownstairsSetAmplifierToShowFsat
	SETDEVICE Lounge.Fsat1AmpZone1Fsat OFF;
	SETDEVICE Lounge.Fsat6AmpZone2Fsat OFF;
END;

// ******************* DownstairsSetAmplifierToListenToRadio  ****************************
//after amplifier has spent 20 seconds booting, set inputs to radio for zones 1 and 2.
PROCEDURE DownstairsSetAmplifierToListenToRadio
	SETDEVICE Lounge.NothingAmpZone1Tuner OFF;
	SETDEVICE Lounge.NothingAmpZone2Tuner OFF;
END;
// ******************* AllGoOut  ****************************
PROCEDURE AllGoOut
    someoneIsInTheHouse = FALSE;
   CALL AllOff;
    CALL SecurityLights;
    // ensure all devices get turned off even if the computer doesn't know that they are on
	REFRESHDEVICES;
END;


// ******************* Security Lights ****************************
PROCEDURE SecurityLights // called at 7am, 7pm, at sunset and when everone goes out.
    IF NOT someoneIsInTheHouse THEN
		SETDEVICE Smart.Dog ON;
		IF darkness == Dark THEN
			SETDEVICE DiningRoom.CeilingLight ON DELAYED 00:00:00 DURATION 00:20:00;
			SETDEVICE Lounge.WallLights       ON DELAYED 00:19:00 DURATION 00:40:00;
			SETDEVICE Bed1.CeilingLight       ON DELAYED 00:39:00 DURATION 01:00:00;
		ELSE
			SETDEVICE DiningRoom.CeilingLight OFF;
			SETDEVICE Lounge.WallLights OFF;
			SETDEVICE Bed1.CeilingLight OFF;
		ENDIF;
    ENDIF;
END;

// ******************* SecurityStop  ****************************
PROCEDURE SecurityStop
    IF NOT someoneIsInTheHouse THEN
		SETDEVICE Smart.Dog OFF;
		SETDEVICE DiningRoom.CeilingLight OFF;
		SETDEVICE Lounge.WallLights OFF;
		SETDEVICE Bed1.CeilingLight OFF;
    ENDIF;
END;


// ******************* All Lights Off ****************************
PROCEDURE AllLightsOff
	SETDEVICE Conservatory.LAMP OFF;
	SETDEVICE Lounge.LAMP OFF;
	SETDEVICE DiningRoom.LAMP OFF;
	SETDEVICE Hall.LAMP OFF;
	SETDEVICE Landing.LAMP OFF;
	SETDEVICE Bed1.LAMP OFF;
	SETDEVICE Kitchen.LAMP OFF;
	SETDEVICE UtilityRoom.LAMP OFF;
	SETDEVICE Garage.LAMP OFF; 
END;

// ******************* Christmas Lights ***********************
//PROCEDURE XmasLightsOn
//	SETDEVICE Garage.XmasLights ON;
//END;

// ******************* XmasLightsOff  ****************************
//PROCEDURE XmasLightsOff
//	SETDEVICE Garage.XmasLights OFF;
//END;

// *************************************************************************
// ******************* Downstairs Entertainment ****************************
// *************************************************************************

// ******************* DownstairsTvOn ****************************
PROCEDURE DownstairsTvOn
    IF NOT FsatReceiverIsOn THEN
		SETDEVICE Lounge.FsatReceiverNothing ON;
	FsatReceiverIsOn = TRUE;
	// The BBC 24 hour news channel is currently on 200 on Fsat.
	SETDEVICE Lounge.Fsat2AmpZone1Bluray ON; //digit 2
	SETDEVICE Lounge.Fsat0AmpZone2Satellite  ON; //digit 0
	SETDEVICE Lounge.Fsat0AmpZone2Satellite  ON; //digit 0
    ENDIF;
	IF whatTime != SleepTime THEN
		IF SomeoneIsInKitchen THEN //don't switch the TV on yet if no-one is in the kitchen
			SETDEVICE Kitchen.Amplifier ON;
			SETDEVICE Kitchen.Tv ON;
		ENDIF;
	ELSE
		SETDEVICE Kitchen.Amplifier OFF;
		SETDEVICE Kitchen.Tv OFF;
	ENDIF;
	SETDEVICE Lounge.Amplifier ON;
	RESET loungeAmplifierWarmUpTimeout; //select the source in a few seconds
	SETDEVICE Lounge.Tv ON;
END;

// ******************* DownstairsTvOff ****************************
PROCEDURE DownstairsTvOff
	CALL SetFsatReceiverToStandby;
	SETDEVICE Kitchen.Tv OFF;
	SETDEVICE Lounge.Tv OFF;
END;

// ******************* DownstairsSetAmplifierToRadio  ****************************
// n.b. amplifier must have spent 20 seconds booting up for this to work
//BODY DownstairsSetAmplifierToRadio
//	SETDEVICE Lounge.Fsat5AmpZone1Satellite OFF;
//	SETDEVICE Lounge.Fsat0AmpZone2Satellite OFF;
//END;

// ******************* DownstairsSetAmplifierToBluRay  ****************************
// n.b. amplifier must have spent 20 seconds booting up for this to work
//BODY DownstairsSetAmplifierToBluRay
//	SETDEVICE Lounge.Fsat1AmpZone1Fsat OFF;
//	SETDEVICE Lounge.Fsat6AmpZone2Fsat OFF;
//END;

// ******************* SetFsatReceiverToStandby  ****************************
PROCEDURE SetFsatReceiverToStandby
    IF FsatReceiverIsOn THEN
		SETDEVICE Lounge.FsatReceiverNothing OFF; //send Infrared remote control message to fsat receiver
		FsatReceiverIsOn = FALSE;
    ENDIF;
END;

// ******************* AllOffDownstairs ****************************
PROCEDURE AllOffDownstairs
	SomeoneIsInKitchen = FALSE;
	SomeoneIsInLounge = FALSE;
	SomeoneIsInDiningRoom = FALSE;
 	SETDEVICE Conservatory.APPLIANCE OFF;
	SETDEVICE Lounge.APPLIANCE OFF;
	SETDEVICE DiningRoom.APPLIANCE OFF;
	SETDEVICE Kitchen.APPLIANCE OFF;
	SETDEVICE UtilityRoom.APPLIANCE OFF;
	CALL DeactivateGoogleAlexa;
	CALL SetFsatReceiverToStandby;
END;


// ******************* AllOff  ****************************
PROCEDURE AllOff
	CALL AllOffDownstairs;
	SETDEVICE Hall.APPLIANCE OFF;
	SETDEVICE Landing.APPLIANCE OFF;
	SETDEVICE Bed1.APPLIANCE OFF;
END;


// ******************* Waking up Gently (no lights) ****************************
PROCEDURE WakeUpGently
    IF someoneIsInTheHouse THEN // no-one to wake up!
		SETDEVICE Bed1.Amplifier ON DURATION 02:02:00;
    ENDIF;
END;

// ******************* WakeUp  ****************************
PROCEDURE WakeUp
    IF someoneIsInTheHouse THEN // no-one to wake up!
		SETDEVICE Bed1.Amplifier ON DURATION 01:02:00;
		SETDEVICE Bed1.CeilingLight ON DELAYED 00:01:00 DURATION 00:10:00;
    ENDIF;
END;



// ******************* AllInBed  ****************************
PROCEDURE AllInBed
	SETDEVICE Garage.OutsideLight OFF;
END;


// ******************* GoingDark  ****************************
PROCEDURE GoingDark //Fires if any PIR says its going dark early - However PIR light sensor also fires whenever we switch lights off.
	IF darkness == NearlyDark THEN //check whether it is nearly time for sunset
		CALL ItsDark;
	ENDIF;
END;

// ******************* darkness state machine  ****************************

// ******************* ItsLight  ****************************
PROCEDURE ItsLight // predefined action list that will fire automatically
    darkness = Light;
    CALL AllLightsOff;
	CALL SecurityStop;
END;

// ******************* ItsNearlyDark  ****************************
PROCEDURE ItsNearlyDark //Fires a little while before Sunset
	darkness = NearlyDark;
END;

// ******************* ItsDark  ****************************
PROCEDURE ItsDark // predefined action list that will fire automatically
    darkness = Dark;
	//SETDEVICE Garage.XmasLights ON;
	SETDEVICE Garage.OutsideLight ON;
    CALL SecurityLights;
    CALL TvLights;
END;

// ******************* whatTime state machine  ****************************

// ******************* ItsDayTime  ****************************
PROCEDURE ItsDayTime
    whatTime = DayTime;
END;
// ******************* ItsBedtime  ****************************
PROCEDURE ItsBedtime
	whatTime = BedTime;
END;
// ******************* ItsSleepTime  ****************************
PROCEDURE ItsSleepTime
	whatTime = SleepTime;
END;
// ******************* ItsEarliestWakeUpTime  ****************************
PROCEDURE ItsEarliestWakeUpTime
    whatTime = EarliestWakeUpTime;
END;

// ******************* ItsGettingUpTime  ****************************
PROCEDURE ItsGettingUpTime
    whatTime = GettingUpTime;
END;

// *********************Radio News Off and On ************************
PROCEDURE RadioNewsOn
	ListeningToEveningNews = TRUE;
	CALL EveningNews;
END;

PROCEDURE RadioNewsOff
	ListeningToEveningNews = FALSE;
	CALL EveningNews;
END;

PROCEDURE EveningNews
	IF ListeningToEveningNews THEN
		IF Lounge.Amplifier == OFF AND someoneIsInTheHouse THEN
			SETDEVICE Lounge.Amplifier ON;
			SETDEVICE Kitchen.Amplifier ON;
			SETDEVICE Bed1.Amplifier ON;
			RESET loungeAmplifierWarmUpRadioTimeout; //select the source in a few seconds
		ENDIF;
	ELSE
		IF Lounge.Tv == OFF THEN
			SETDEVICE Lounge.Amplifier OFF;
			SETDEVICE Kitchen.Amplifier OFF;
			SETDEVICE Bed1.Amplifier OFF;
		ENDIF;
	ENDIF;
END;
// ******************* Refresh Devices And Resynch Clock  ****************************
PROCEDURE RefreshDevicesAndResynchClock
	RESYNCHCLOCK;
	REFRESHDEVICES;
END;

// ******************* RefreshDevices  ****************************
PROCEDURE RefreshDevices
	REFRESHDEVICES;
END;

// ******************* Holidays and summer time  ****************************

DAY 29/3/20 BST; // first day of BST for year
DAY 25/10/20 GMT; // day after last day of BST for year

DAY 1/1/20 HOLIDAY; // New Year's Day Holiday
DAY 10/04/20 HOLIDAY; // Good Friday
DAY 13/04/20 HOLIDAY; // Easter Monday
DAY 8/5/20 HOLIDAY; // May Day Bank Holiday
DAY 25/5/20 HOLIDAY; // Spring Bank Holiday
DAY 31/8/20 HOLIDAY; // August Bank Holiday
DAY 25/12/20 HOLIDAY; // Christmas day
DAY 26/12/20 HOLIDAY; // Boxing Day
DAY 27/12/20 HOLIDAY; // Admiral Holiday
DAY 28/12/20 HOLIDAY; // Admiral Holiday
DAY 29/12/20 HOLIDAY; // Admiral Holiday
DAY 30/12/20 HOLIDAY; // Admiral Holiday
DAY 31/12/20 HOLIDAY; // Admiral Holiday

//********************************** 2021 ****************************************
DAY 28/3/21 BST; // first day of BST for year
DAY 31/10/21 GMT; // day after last day of BST for year

DAY 1/1/21 HOLIDAY; // New Year's Day Holiday
DAY 02/04/21 HOLIDAY; // Good Friday
DAY 05/04/21 HOLIDAY; // Easter Monday
DAY 03/5/21 HOLIDAY; // May Day Bank Holiday
DAY 31/5/21 HOLIDAY; // Spring Bank Holiday
DAY 30/8/21 HOLIDAY; // August Bank Holiday
DAY 25/12/21 HOLIDAY; // Christmas day
DAY 26/12/21 HOLIDAY; // Boxing Day
DAY 27/12/21 HOLIDAY; // Admiral Holiday
DAY 28/12/21 HOLIDAY; // Admiral Holiday
DAY 29/12/21 HOLIDAY; // Admiral Holiday
DAY 30/12/21 HOLIDAY; // Admiral Holiday
DAY 31/12/21 HOLIDAY; // Admiral Holiday

//********************************** 2022 ****************************************
DAY 27/3/22 BST; // first day of BST for year
DAY 30/10/22 GMT; // day after last day of BST for year

DAY 1/1/22 HOLIDAY; // New Year's Day Holiday
DAY 15/04/22 HOLIDAY; // Good Friday
DAY 18/04/22 HOLIDAY; // Easter Monday
DAY 02/5/22 HOLIDAY; // May Day Bank Holiday
DAY 30/5/22 HOLIDAY; // Spring Bank Holiday
DAY 29/8/22 HOLIDAY; // August Bank Holiday
DAY 25/12/22 HOLIDAY; // Christmas day
DAY 26/12/22 HOLIDAY; // Boxing Day
DAY 27/12/22 HOLIDAY; // Admiral Holiday
DAY 28/12/22 HOLIDAY; // Admiral Holiday
DAY 29/12/22 HOLIDAY; // Admiral Holiday
DAY 30/12/22 HOLIDAY; // Admiral Holiday
DAY 31/12/22 HOLIDAY; // Admiral Holiday


//********************************** 2023 ****************************************
DAY 26/3/23 BST; // first day of BST for year
DAY 29/10/23 GMT; // day after last day of BST for year

DAY 02/1/23 HOLIDAY; // New Year's Day Holiday
DAY 07/04/23 HOLIDAY; // Good Friday
DAY 10/04/23 HOLIDAY; // Easter Monday
DAY 01/5/23 HOLIDAY; // May Day Bank Holiday
DAY 29/5/23 HOLIDAY; // Spring Bank Holiday
DAY 28/8/23 HOLIDAY; // August Bank Holiday
DAY 25/12/23 HOLIDAY; // Christmas day
DAY 26/12/23 HOLIDAY; // Boxing Day
DAY 27/12/23 HOLIDAY; // Admiral Holiday
DAY 28/12/23 HOLIDAY; // Admiral Holiday
DAY 29/12/23 HOLIDAY; // Admiral Holiday
DAY 30/12/23 HOLIDAY; // Admiral Holiday
DAY 31/12/23 HOLIDAY; // Admiral Holiday



// ******************* Events ****************************
TIMER "wakeupTimer";
SEQUENCE "morning" 07:59:45 WORKING;
EVENT -11:00 ItsBedtime;
EVENT -07:00 ItsSleepTime;
EVENT -02:00 ItsEarliestWakeUpTime;
EVENT -00:01 ItsGettingUpTime;
EVENT 00:00 WakeUp;
EVENT 00:59 ItsDayTime;
EVENT 01:00:15 AllGoOut;

//
//SEQUENCE "parkrun" 07:15 SAT;
//EVENT -10:00 ItsBedtime;
//EVENT -07:00 ItsSleepTime;
//EVENT -02:00 ItsEarliestWakeUpTime;
//EVENT -00:01 ItsGettingUpTime;
//EVENT 00:00 WakeUp;
//EVENT 00:59 ItsDayTime;
//EVENT 01:00:15 AllGoOut;
//
SEQUENCE "SaturdayMorningNews" 07:59:45 SAT;
EVENT -10:00 ItsBedtime;
EVENT -07:00 ItsSleepTime;
EVENT -02:00 ItsEarliestWakeUpTime;
EVENT -00:01 ItsGettingUpTime;
EVENT 00:00 WakeUpGently;
EVENT 00:59 ItsDayTime;
EVENT 02:00:15 AllGoOut;
//
SEQUENCE "lie-in" 08:59:45 NONWORKING;
EVENT -11:00 ItsBedtime;
EVENT -07:00 ItsSleepTime;
EVENT -02:00 ItsEarliestWakeUpTime;
EVENT -00:01 ItsGettingUpTime;
EVENT 00:00 WakeUpGently;
EVENT 00:59 ItsDayTime;
EVENT 01:00:15 AllGoOut;
END;

TIMER "EveningRadioNews";
SEQUENCE "WeekdayEveningNews" 16:59:45 WORKING;
EVENT 00:00 RadioNewsOn;
EVENT 01:30:10 RadioNewsOff;
SEQUENCE "SaturdayEveningNews" 16:59:45 SAT;
EVENT 00:00 RadioNewsOn;
EVENT 00:30:10 RadioNewsOff;
SEQUENCE "SundayEveningNews" 17:59:45 SUN;
EVENT 00:00 RadioNewsOn;
EVENT 00:15:10 RadioNewsOff;
END;

TIMER "security";
SEQUENCE "securityam" 07:00 ALL;
EVENT 00:00 SecurityLights;
EVENT 01:00 SecurityStop;
SEQUENCE "securitypm" 19:00 ALL;
EVENT 00:00 SecurityLights;
EVENT 01:00 SecurityLights;
EVENT 02:00 SecurityLights;
EVENT 03:00 SecurityLights;
EVENT 04:00 SecurityStop;
END;

TIMER "refreshdevices";
SEQUENCE "refreshingdevices" 00:30 ALL;
EVENT 00:00 RefreshDevicesAndResynchClock;
EVENT 01:00 RefreshDevicesAndResynchClock;
EVENT 02:00 RefreshDevicesAndResynchClock;
EVENT 03:00 RefreshDevicesAndResynchClock;
EVENT 04:00 RefreshDevicesAndResynchClock;
EVENT 05:00 RefreshDevicesAndResynchClock;
EVENT 06:00 RefreshDevicesAndResynchClock;
EVENT 07:00 RefreshDevicesAndResynchClock;
EVENT 08:00 RefreshDevicesAndResynchClock;
EVENT 09:00 RefreshDevicesAndResynchClock;
EVENT 10:00 RefreshDevicesAndResynchClock;
EVENT 11:00 RefreshDevicesAndResynchClock;
EVENT 12:00 RefreshDevicesAndResynchClock;
EVENT 13:00 RefreshDevicesAndResynchClock;
EVENT 14:00 RefreshDevicesAndResynchClock;
EVENT 15:00 RefreshDevicesAndResynchClock;
EVENT 16:00 RefreshDevicesAndResynchClock;
EVENT 17:00 RefreshDevicesAndResynchClock;
EVENT 18:00 RefreshDevicesAndResynchClock;
EVENT 19:00 RefreshDevicesAndResynchClock;
EVENT 20:00 RefreshDevicesAndResynchClock;
EVENT 21:00 RefreshDevicesAndResynchClock;
EVENT 22:00 RefreshDevicesAndResynchClock;
EVENT 23:00 RefreshDevicesAndResynchClock;
END;

TIMER "Darkness";
SEQUENCE "sunset" SUNSET ALL;
EVENT -01:00 ItsNearlyDark;
EVENT 00:00 ItsDark;
SEQUENCE "sunrise" SUNRISE ALL;
EVENT 00:00 ItsLight;
END;

//TIMER "Xmas";
//SEQUENCE "jollymorning" 07:00 ALL;
//EVENT 00:00 XmasLightsOn;
//SEQUENCE "savepowerovernight" 23:00 ALL;
//EVENT 00:00 XmasLightsOff;
//END;

END.